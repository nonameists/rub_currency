version: '3.8'

services:

  backend:
    build:
      context: backend_web
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env_dev
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:1.21.6
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"

  redis:
    image: redis:6.2.1
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    env_file:
      - .env_dev

  rabbitmq:
    image: rabbitmq:latest
    env_file:
      - .env_dev

  celery_beat:
    build:
      context: backend_web
      dockerfile: app_celery/celery_beat/Dockerfile
    restart: always
    depends_on:
      - rabbitmq
      - backend
    env_file:
      - .env_dev

  celery_worker:
    build:
      context: backend_web
      dockerfile: app_celery/celery_worker/Dockerfile
    restart: always
    depends_on:
      - celery_beat
    env_file:
      - .env_dev

  db:
    image: postgres:13
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env_dev
